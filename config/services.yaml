# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

        bind:
            $queryBus:        '@tactician.commandbus.query'
            $commandBus:      '@tactician.commandbus.command'
            $writeModel:      '@App\Infrastructure\Doctrine\Model\WriteModel'
            $writeModelEvent: '@App\Infrastructure\Doctrine\Model\WriteModelEvent'

    _instanceof:
        App\Application\Command\CommandHandlerInterface:
            public: true
            tags:
                - { name: tactician.handler, typehints: true, bus: command }

        App\Application\Query\QueryHandlerInterface:
            public: true
            tags:
                - { name: tactician.handler, typehints: true, bus: query }

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/**/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'


    ### Domain

    App\Infrastructure\EventSubscriber\LogEventSubscriber:
        tags:
            - {name: monolog.logger, channel: pharmacy-point-event }


    App\Domain\Event\Publisher\DomainEventPublisher:
        public: true
        calls:
            - { method: subscribe, arguments: ['@App\Infrastructure\EventSubscriber\LogEventSubscriber'] }




    ### Infrastructure

    App\Infrastructure\Symfony\EventSubscriber\ExceptionSubscriber:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.exception' }



    # UI

    App\UI\Http\ApiRest\Controller\:
        resource: '../src/UI/Http/ApiRest/Controller'
        tags: [ 'controller.service_arguments' ]

    App\UI\Http\Web\Controller\:
        resource: '../src/UI/Http/Web/Controller'
        tags: ['controller.service_arguments']
